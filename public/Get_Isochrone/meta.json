{"version": "0.0.3", "job_config": {"version": "0.0.3", "name": null, "steps": [{"version": "0.0.3", "type": "udf", "name": null, "metadata": null, "ignore_chunk_error": false, "udf": {"name": "Get_Isochrone", "type": "geopandas_v2", "headers": [{"module_name": "utils", "source_file": "utils.py"}], "metadata": {"fused:vizConfig": {"tileLayer": {"@@type": "TileLayer", "minZoom": 0, "maxZoom": 19, "tileSize": 256, "pickable": true}, "rasterLayer": {"@@type": "BitmapLayer"}, "vectorLayer": {"@@type": "GeoJsonLayer", "stroked": true, "filled": true, "pickable": true, "lineWidthMinPixels": 1, "getLineColor": {"@@function": "hasProp", "property": "r", "present": "@@=[properties.r, properties.g, properties.b]", "absent": [255, 255, 0, 100]}, "getFillColor": [255, 0, 0, 50]}}, "fused:udfType": "vector_single", "fused:slug": "Get_Isochrone", "fused:name": "Get_Isochrone", "fused:assetUrl": "https://fused-magic.s3.us-west-2.amazonaws.com/thumbnails/udfs-staging/Get_Isochrone.png", "fused:defaultParameters": [], "fused:tags": [{"id": "vector", "label": "vector"}, {"id": "osm", "label": "osm", "isCreatable": true}, {"id": "tutorial", "label": "tutorial"}], "fused:description": "# Overview\n\nThis UDF is using Valhalla API to create an isochrone. Valhalla, an open-source routing engine, and its accompanying libraries are designed for OpenStreetMap data, offering features such as time+distance matrix computation, isochrones, elevation sampling, map matching, and tour optimization (Travelling Salesman).\n\n# External links\n\n- [Valhalla Github repo](https://github.com/valhalla/valhalla)", "fused:id": "4c20ce1d-fe4f-4624-bb7e-14c1f43378fe", "fused:defaultViewState": {"enable": true, "latitude": 40.80720563114421, "longitude": -73.84687499999998, "zoom": 8.570772204129872, "pitch": 0, "bearing": 0}}, "table_schema": null, "entrypoint": "udf", "parameters": {}, "original_headers": null, "source": "udf_Get_Isochrone.py"}, "input": null}], "metadata": null}}